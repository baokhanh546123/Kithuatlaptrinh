public class Main
{
    int size, count;
    int[] a;

    public Main(int size) {
        this.size = size;
        this.count = -1;
        this.a = new int[size];
    }

    void push(int data) {
        if (count < a.length - 1) {
            count++;
            a[count] = data;
            System.out.println("Added " + data);
        } else {
            System.out.println("Stack is full");
        }
    }

    int partition(int low, int high) {
        int pi = a[high];
        int i = low;
        int j = high - 1;

        while (i <= j) {
            while (i <= high && a[i] < pi) {
                i++;
            }
            while (j >= low && a[j] > pi) {
                j--;
            }
            if (i < j) {
                swap(i, j);
            }
        }
        swap(i, high);
        return i;
    }

    void quick(int low, int high) {
        if (low < high) {
            int pi = partition(low, high);
            quick(low, pi - 1);
            quick(pi + 1, high);
        }
    }

    void swap(int i, int j) {
        int temp = a[i];
        a[i] = a[j];
        a[j] = temp;
    }

    void display() {
        for (int i = 0; i <= count; i++) {
            System.out.print(a[i] + " ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Main m = new Main(10);
        m.push(3);
        m.push(5);
        m.push(1);
        m.push(8);
        m.push(2);
        
        System.out.println("Before sorting:");
        m.display();
        
        m.quick(0, m.count);
        
        System.out.println("After sorting:");
        m.display();
    }
}